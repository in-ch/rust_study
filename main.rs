fn main() {
    println!("Hello, world!");
}

// 이 짧은 프로그램에는 많은 일을 한다.
// 1. 러스트 스타일은 탭이 아닌 네 개의 스페이스로 들여쓰기를 한다.
// 2. println!은 러스트 매크로(macro)라고 불린다. 만약 대신에 함수를 호출하려면 !없이 println으로 입력되었어야 한다.
// 3. "Hello, world!"는 스트링이다. 이 스트링을 println!의 안자로 넘기고, 이 스트링이 화면에 출력된다.
// 4. 이 라인을 세미콜론 ;으로 끝냈는데, 이는 표현식이 끝났고 다음 것이 시작될 준비가 되었음을 나타낸다. 

// 실행 구조에 대해서 
// 컴파일과 실행은 개별적인 단계이다. 
// 1. rustc main.rs -> 컴파일, 컴파일을 실행한 뒤 러스트는 실행가능한 바이너리를 출력한다. -> c의 gcc, c++의 clang과 유사하다. 
// 2. ./main -> 실행 

// 간단한 프로그램에 대해 그냥 rustc만으로 컴파일하는 것은 괜찮지만, 프로젝트가 커짐에 따라 모든 옵션을 관리하고 코드를 공유하기란 쉽지 않다. 
// 따라서 Cargo 도구를 통해 이를 쉽게 해준다. 